<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njit.stusystem.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.njit.stusystem.model.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="school_year" jdbcType="INTEGER" property="schoolYear" />
    <result column="physics" jdbcType="INTEGER" property="physics" />
    <result column="math" jdbcType="INTEGER" property="math" />
    <result column="english" jdbcType="INTEGER" property="english" />
    <result column="biology" jdbcType="INTEGER" property="biology" />
    <result column="chinese" jdbcType="INTEGER" property="chinese" />
    <result column="chemistry" jdbcType="INTEGER" property="chemistry" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school_year, physics, math, english, biology, chinese, chemistry, stu_id
  </sql>
  <select id="selectByExample" parameterType="com.njit.stusystem.model.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njit.stusystem.model.CourseExample">
    delete from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.njit.stusystem.model.Course" useGeneratedKeys="true">
    insert into tb_course (school_year, physics, math, 
      english, biology, chinese, 
      chemistry, stu_id)
    values (#{schoolYear,jdbcType=INTEGER}, #{physics,jdbcType=INTEGER}, #{math,jdbcType=INTEGER}, 
      #{english,jdbcType=INTEGER}, #{biology,jdbcType=INTEGER}, #{chinese,jdbcType=INTEGER}, 
      #{chemistry,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.njit.stusystem.model.Course" useGeneratedKeys="true">
    insert into tb_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolYear != null">
        school_year,
      </if>
      <if test="physics != null">
        physics,
      </if>
      <if test="math != null">
        math,
      </if>
      <if test="english != null">
        english,
      </if>
      <if test="biology != null">
        biology,
      </if>
      <if test="chinese != null">
        chinese,
      </if>
      <if test="chemistry != null">
        chemistry,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=INTEGER},
      </if>
      <if test="physics != null">
        #{physics,jdbcType=INTEGER},
      </if>
      <if test="math != null">
        #{math,jdbcType=INTEGER},
      </if>
      <if test="english != null">
        #{english,jdbcType=INTEGER},
      </if>
      <if test="biology != null">
        #{biology,jdbcType=INTEGER},
      </if>
      <if test="chinese != null">
        #{chinese,jdbcType=INTEGER},
      </if>
      <if test="chemistry != null">
        #{chemistry,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njit.stusystem.model.CourseExample" resultType="java.lang.Long">
    select count(*) from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolYear != null">
        school_year = #{record.schoolYear,jdbcType=INTEGER},
      </if>
      <if test="record.physics != null">
        physics = #{record.physics,jdbcType=INTEGER},
      </if>
      <if test="record.math != null">
        math = #{record.math,jdbcType=INTEGER},
      </if>
      <if test="record.english != null">
        english = #{record.english,jdbcType=INTEGER},
      </if>
      <if test="record.biology != null">
        biology = #{record.biology,jdbcType=INTEGER},
      </if>
      <if test="record.chinese != null">
        chinese = #{record.chinese,jdbcType=INTEGER},
      </if>
      <if test="record.chemistry != null">
        chemistry = #{record.chemistry,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_course
    set id = #{record.id,jdbcType=INTEGER},
      school_year = #{record.schoolYear,jdbcType=INTEGER},
      physics = #{record.physics,jdbcType=INTEGER},
      math = #{record.math,jdbcType=INTEGER},
      english = #{record.english,jdbcType=INTEGER},
      biology = #{record.biology,jdbcType=INTEGER},
      chinese = #{record.chinese,jdbcType=INTEGER},
      chemistry = #{record.chemistry,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njit.stusystem.model.Course">
    update tb_course
    <set>
      <if test="schoolYear != null">
        school_year = #{schoolYear,jdbcType=INTEGER},
      </if>
      <if test="physics != null">
        physics = #{physics,jdbcType=INTEGER},
      </if>
      <if test="math != null">
        math = #{math,jdbcType=INTEGER},
      </if>
      <if test="english != null">
        english = #{english,jdbcType=INTEGER},
      </if>
      <if test="biology != null">
        biology = #{biology,jdbcType=INTEGER},
      </if>
      <if test="chinese != null">
        chinese = #{chinese,jdbcType=INTEGER},
      </if>
      <if test="chemistry != null">
        chemistry = #{chemistry,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njit.stusystem.model.Course">
    update tb_course
    set school_year = #{schoolYear,jdbcType=INTEGER},
      physics = #{physics,jdbcType=INTEGER},
      math = #{math,jdbcType=INTEGER},
      english = #{english,jdbcType=INTEGER},
      biology = #{biology,jdbcType=INTEGER},
      chinese = #{chinese,jdbcType=INTEGER},
      chemistry = #{chemistry,jdbcType=INTEGER},
      stu_id = #{stuId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>